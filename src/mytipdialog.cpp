// -*- C++ -*- generated by wxGlade 0.6.5 (standalone edition) on Wed Nov 21 15:09:11 2012
// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

// for all others, include the necessary headers (this file is usually all you
// need because it includes almost all "standard" wxWidgets headers)
#ifndef WX_PRECOMP
    #include "wx/wx.h"
#endif

#include <map>
#include <vector>
#include "wx/checkbox.h"
#include "wx/artprov.h"
#include "wx/dialog.h"
#include "wx/tipdlg.h"
#include "leaguesettings.h"
#include "mytipdialog.h"

CMyTipDialog::CMyTipDialog(wxWindow *parent, /*const CMyTipProvider &tipProvider, */bool showTip) : wxDialog( parent, wxID_ANY, "Edit Player Alert" )
{
//	m_tipProvider = tipProvider;
	m_tip = new wxTextCtrl( this, wxID_ANY, "This edit will result in a change to the total available players to be drafted. On the next screen, please choose a player to adjust.", wxDefaultPosition, wxSize( -1, 100 ), wxTE_MULTILINE | wxTE_READONLY /*| wxTE_NO_VSCROLL | wxTE_RICH2 | wxDEFAULT_CONTROL_BORDER */);
#if defined( __WXMSW__)
	m_tip->SetFont( wxFont( 12, wxSWISS, wxNORMAL, wxNORMAL ) );
#endif
	wxIcon icon = wxArtProvider::GetIcon( wxART_INFORMATION, wxART_MESSAGE_BOX );
	wxStaticBitmap *bmp = new wxStaticBitmap( this, wxID_ANY, icon );
	m_showTip = new wxCheckBox( this, wxID_ANY, "Do not show this message again" );
	m_showTip->SetValue( showTip );
	m_showTip->SetFocus();
	wxButton *ok = new wxButton( this, wxID_OK, "OK" );
	wxBoxSizer *topSizer = new wxBoxSizer( wxVERTICAL );
	wxBoxSizer *icon_sizer = new wxBoxSizer( wxHORIZONTAL );
	icon_sizer->Add( bmp, 0, wxCENTRE | wxLEFT, 0 );
	topSizer->Add( 5, 5, 0, wxEXPAND, 0 );
	topSizer->Add( icon_sizer, 0, wxEXPAND, 0 );
	topSizer->Add( 5, 5, 0, wxEXPAND, 0 );
	topSizer->Add( m_tip, 0, wxEXPAND, 10 );
	wxBoxSizer*bottom = new wxBoxSizer( wxHORIZONTAL );
	bottom->Add( m_showTip, 0, wxEXPAND, 0 );
	bottom->Add( 10, 10, 1 );
	bottom->Add( ok, 0, wxCENTRE | wxLEFT, 10 );
	topSizer->Add( 5, 5, 0, wxEXPAND, 0 );
	topSizer->Add( bottom, 0, wxEXPAND, 0 );
	topSizer->Add( 5, 5, 0, wxEXPAND, 0 );
	SetSizer( topSizer );
	topSizer->SetSizeHints( this );
	topSizer->Fit( this );
	Centre( wxBOTH | wxCENTER_FRAME );
}

CMyTipDialog::~CMyTipDialog(void)
{
}

bool CMyTipDialog::ShowTipDialog()
{
	return m_showTip->GetValue();
}
